[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "notepadpp-mcp"
version = "0.1.0"
description = "MCP Server for Notepad++ automation and control"
authors = [
    {name = "Sandra", email = "sandra@example.com"}
]
readme = "src/notepadpp_mcp/docs/README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
dependencies = [
    "fastmcp>=2.12.0",
    "mcp>=1.0.0,<2.0.0",
    "anyio>=4.0.0,<5.0.0",
    "psutil>=5.9.0",
    "pywin32==311; platform_system=='Windows'",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/sandraschi/notepadpp-mcp"
Repository = "https://github.com/sandraschi/notepadpp-mcp"
Issues = "https://github.com/sandraschi/notepadpp-mcp/issues"

[project.scripts]
notepadpp-mcp = "notepadpp_mcp.tools.server:main"

[tool.hatch.build.targets.wheel]
packages = ["src/notepadpp_mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["notepadpp_mcp"]

[tool.mypy]
python_version = "3.10"
ignore_errors = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "win32gui",
    "win32con",
    "win32api",
    "win32process",
    "win32clipboard",
    "mcp",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["src/notepadpp_mcp/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --cov=src/notepadpp_mcp --cov-report=term-missing --cov-report=html --cov-report=xml"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/notepadpp_mcp"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
